[{"/home/ian/WEB/DEC/fcc/src/index.js":"1","/home/ian/WEB/DEC/fcc/src/reportWebVitals.js":"2","/home/ian/WEB/DEC/fcc/src/App.js":"3","/home/ian/WEB/DEC/fcc/src/hooks/useApplicationData1.js":"4"},{"size":410,"mtime":1608246288155,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1608244406991,"results":"7","hashOfConfig":"6"},{"size":896,"mtime":1608249618350,"results":"8","hashOfConfig":"6"},{"size":1555,"mtime":1608247880413,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"bt11yh",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"/home/ian/WEB/DEC/fcc/src/index.js",[],["20","21"],"/home/ian/WEB/DEC/fcc/src/reportWebVitals.js",[],"/home/ian/WEB/DEC/fcc/src/App.js",["22"],"/home/ian/WEB/DEC/fcc/src/hooks/useApplicationData1.js",["23"],"import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst initCoords = {\n  lat: 0,\n  lng: 0\n};\n\nconst initWeath = {\n  tempK: 0,\n  main: '',\n  description: '',\n  country: '',\n  city: ''\n\n};\n\nconst icons = {\n  'Clouds': \"fas fa-cloud\",\n  'Sun': 'far fa-sun'\n}\nconst useApplicationData1 = () => {\n  const [weather, setWeather] = useState(initWeath);\n  const [coords, setCoords] = useState(initCoords);\n  const [cels, setCels] = useState(true);\n  const [icon, setIcon] = useState('')\n  \n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(setLocation);\n  }, []);\n  useEffect(() => {\n    getWeather();\n  }, [coords]);\n\n  useEffect(() => {\n    setIcon(icons[weather.main])\n  }, [weather])\n  const setLocation = position => {\n    setCoords({\n      lat: position.coords.latitude,\n      lng: position.coords.longitude\n    });\n  };\n  const getWeather = async () => {\n    if (!coords.lat)\n      return;\n\n    const data = await axios\n      .post('/api/weather', { ...coords });\n    const A = data.data.data;\n    setWeather({\n      tempK: A.main.temp - 273.15,\n      main: A.weather[0].main,\n      description: A.weather[0].description,\n      country: A.sys.country,\n      city: A.name\n    });\n  };\n  const convertTemp = () => {\n    setWeather({\n      ...weather, tempK:getCOrF(weather.tempK)\n    })\n    setCels(prev => !prev);\n  }\n\n  const getCOrF = (temp) => {\n    if(cels) return temp * 9 / 5 + 32;\n    return (temp - 32) * 5 / 9;\n  }\n\n  return {\n    weather,\n    convertTemp,\n    icon\n  };\n\n};\n\nexport default useApplicationData1;",{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":1,"column":8,"nodeType":"30","messageId":"31","endLine":1,"endColumn":12},{"ruleId":"32","severity":1,"message":"33","line":33,"column":6,"nodeType":"34","endLine":33,"endColumn":14,"suggestions":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWeather'. Either include it or remove the dependency array.","ArrayExpression",["38"],"no-global-assign","no-unsafe-negation",{"desc":"39","fix":"40"},"Update the dependencies array to be: [coords, getWeather]",{"range":"41","text":"42"},[636,644],"[coords, getWeather]"]